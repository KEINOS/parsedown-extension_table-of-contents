# =============================================================================
#  Docker Compose file for testing on different PHP versions.
#
#  Usage:
#    $ # Download and build the images
#    $ docker compose pull && docker compose build
#
#    $ # Run the tests in the container for various PHP versions
#    $ # ----------------------------------------------------------------------
#
#    $ # PHP 5.6.40 is not officially supported but used to check for backwards
#    $ # compatibility (still works tho!.)
#    $ docker compose run --rm oldest
#
#    $ # PHP 7.x is the minimum supported version.
#    $ docker compose run --rm min
#
#    $ # PHP 8.3 is the maximum supported version.
#    $ docker compose run --rm max
#
#    $ # PHP 8.4+ (latest) is the experimental version. Currently errors out.
#    $ docker compose run --rm latest
#
#    $ # Generate PHPDoc documentation.
#    $ docker compose run --rm phpdoc
# =============================================================================

services:
  # Unsupported PHP version but used to check for backwards compatibility.
  oldest:
    build:
      dockerfile: ./.github/Dockerfile
      args:
        PHP_VERSION: 5.6.40-cli-alpine
    volumes:
      - .:/app
  # Minimum supported PHP version. Which is equivalent to Parsedown's minimum
  # supported version.
  min:
    build:
      dockerfile: ./.github/Dockerfile
      args:
        PHP_VERSION: 7-cli-alpine
    volumes:
      - .:/app
  # Currently supported maximum PHP version.
  max:
    build:
      dockerfile: ./.github/Dockerfile
      args:
        PHP_VERSION: 8.3-cli-alpine
    volumes:
      - .:/app
  # Experimental latest PHP version. Currently errors out.
  latest:
    build:
      dockerfile: ./.github/Dockerfile
      args:
        PHP_VERSION: cli-alpine
    volumes:
      - .:/app
  # Run examples in PHP5 to test its functionality.
  examples:
    build:
      dockerfile: ./.github/Dockerfile
      args:
        PHP_VERSION: 5.6.40-cli-alpine
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: /usr/local/bin/php
    command: /app/examples/run-integration-test.php
  # Generate PHPDoc documentation.
  phpdoc:
    image: phpdoc/phpdoc:3
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: phpdoc
    command: --directory . --filename ./Extension.php --target "docs/" --title "ParsedownToC" --ignore "vendor/" --ignore "examples/" --ignore "tests/"
  psalm:
    build:
      dockerfile: ./.github/Dockerfile
      args:
        PHP_VERSION: 8.3-cli-alpine
    volumes:
      - ./.git:/app/.git
      - ./examples:/app/examples
      - ./Extension.php:/app/Extension.php
      - ./composer.json:/app/composer.json
      - ./tests/run-psalm.sh:/app/tests/run-psalm.sh
      - ./psalm.xml:/app/psalm.xml
    working_dir: /app
    entrypoint: /app/tests/run-psalm.sh
    init: true
